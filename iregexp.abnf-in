i-regexp = branch *( "|" branch )
branch = *piece
piece = atom [quantifier]
quantifier = <<?*+>> / ( "{" quantity "}" )
quantity = quantRange / quantMin / QuantExact
quantRange = QuantExact "," QuantExact
quantMin = QuantExact ","
QuantExact = <<0-9>>+
atom = NormalChar / charClass / ( "(" i-regexp ")" )
NormalChar = <<^.\?*+{}()|[\\]>>
charClass = SingleCharEsc / charClassEsc / charClassExpr / WildcardEsc
charClassExpr = "[" charGroup "]"
charGroup =  negCharGroup / posCharGroup
posCharGroup = 1*charGroupPart [bareHyphen]
negCharGroup = "^" posCharGroup
charGroupPart = singleCharSeq / charRange / charClassEsc
bareHyphen = "-"
singleCharSeq = (bareHyphen / singleCharNonHyphen) *singleCharNonHyphen
singleCharNonHyphen = SingleCharEsc / SingleCharNoEscHyphen
singleChar = SingleCharEsc / SingleCharNoEsc
charRange = singleChar "-" singleChar
SingleCharNoEsc = <<^\]\[>>
SingleCharNoEscHyphen = <<^\]\[->>

SingleCharEsc = "\" <<nrt\|.?*+(){}\-\[\]\^>>
charClassEsc = ( MultiCharEsc / catEsc / complEsc )
catEsc = "\p{" charProp "}"
complEsc = "\P{" charProp "}"
charProp = IsCategory / IsBlock
IsCategory = Letters / Marks / Numbers / Punctuation / Separators / Symbols / Others
Letters = "L" <<ultmo>>?
Marks = "M" <<nce>>?
Numbers = "N" <<dlo>>?
Punctuation = "P" <<cdseifo>>?
Separators = "Z" <<slp>>?
Symbols = "S" <<mcko>>?
Others = "C" <<cfon>>?
IsBlock = "Is" <<a-zA-Z0-9\->>+

MultiCharEsc = "\" <<sSiIcCdDwW>>
WildcardEsc = "."
